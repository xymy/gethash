[tox]
requires =
    tox>=4.4
env_list =
    py39
    py310
    py311
    py312
skip_missing_interpreters = true

[testenv]
package = wheel
wheel_build_env = .pkg

[testenv:py3{9,10,11,12}]
pass_env =
    PYTEST_*
set_env =
    COVERAGE_FILE = {envdir}{/}.coverage
    HYPOTHESIS_STORAGE_DIRECTORY = {envdir}{/}.cache{/}hypothesis
extras =
    test
commands =
    coverage erase
    pytest -v -o cache_dir={envdir}{/}.cache{/}pytest \
        --cov-report=html:{envdir}{/}htmlcov {posargs}
    coverage report

[testenv:lint]
extras =
    lint
commands =
    ruff check --cache-dir={envdir}{/}.cache{/}ruff {toxinidir}{/}src {toxinidir}{/}tests
    ruff format --cache-dir={envdir}{/}.cache{/}ruff {toxinidir}{/}src {toxinidir}{/}tests
    mypy --cache-dir={envdir}{/}.cache{/}mypy {toxinidir}{/}src {toxinidir}{/}tests

[testenv:docs]
extras =
    docs
commands =
    python {toxinidir}{/}docs{/}release.py --clean --dist {posargs}

[testenv:dev]
extras =
    docs
    lint
    test
package = editable
system_site_packages = true

[pytest]
addopts = --strict-markers --cov --cov-context=test
cache_dir = .cache/pytest
filterwarnings =
    error
    ignore::DeprecationWarning
testpaths =
    tests
xfail_strict = true

[coverage:run]
branch = true
relative_files = true
source =
    gethash
    tests

[coverage:paths]
source =
    src
    */site-packages

[coverage:report]
exclude_also =
    assert_never\(.*\)
    raise AssertionError
    raise NotImplementedError
    return NotImplemented
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @overload
precision = 1

[coverage:html]
show_contexts = true
